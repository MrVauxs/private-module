name: Release Creation

on:
  release:
    types: [published]

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # get part of the tag after the `v`
    - name: Extract tag version number
      id: get_version
      uses: battila7/get-version-action@v2

    # Substitute the Manifest and Download URLs in the module.json
    - name: Substitute Download Links For Google Drive
      id: sub_manifest_link_for_drive
      uses: microsoft/variable-substitution@v1
      with:
        files: 'module.json'
      env:
        version: ${{steps.get_version.outputs.version-without-v}}

    # Create a folder containing all the module stuff and zip it for the release
    - name: Create Zip
      run: zip -r9 ./module.zip module.json scripts/ styles/ packs/ lang/ assets/ REPLACE_ME

    # Create a release for this specific version
    - name: Update Release with Files
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true # Set this to false if you want to prevent updating existing releases
        name: ${{ github.event.release.name }}
        draft: ${{ github.event.release.draft }}
        prerelease: ${{ github.event.release.prerelease }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './module.json, ./module.zip'
        tag: ${{ github.event.release.tag_name }}
        body: ${{ github.event.release.body }}

    - name: Upload to Google Drive
      env:
        CREDENTIALS: ${{ secrets.CREDENTIALS }}
        FOLDERID: ${{ secrets.FOLDERID }}
      if: ${{ env.CREDENTIALS != '' }}
      uses: adityak74/google-drive-upload-git-action@main
      with:
        credentials: ${{ env.CREDENTIALS }}
        filename: "module*"
        folderId: ${{ env.FOLDERID }}
        overwrite: "true"

    - name: Get Module Title
      id: title
      uses: notiz-dev/github-action-json-property@release
      with:
          path: 'module.json'
          prop_path: 'title'

    # Create a ping in the Discord server
    - name: Send Discord Ping
      uses: Ilshidur/action-discord@0.3.2
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      if: ${{ env.DISCORD_WEBHOOK != '' }}
      with:
        args: '${{steps.title.outputs.propStr}} has been updated to version `${{github.event.release.tag_name}}`!'
